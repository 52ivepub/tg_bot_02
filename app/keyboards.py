
from aiogram.types import (
    ReplyKeyboardMarkup, 
    KeyboardButton, 
    InlineKeyboardButton, 
    InlineKeyboardMarkup, 
    WebAppInfo,
    )
from faker import Faker
from aiogram.utils.keyboard import InlineKeyboardBuilder
from config import admins



main = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text='–ö–∞—Ç–∞–ª–æ–≥'), KeyboardButton(text='–û –Ω–∞—Å')],
    [KeyboardButton(text='–ö–æ—Ä–∑–∏–Ω–∞'), KeyboardButton(text='–ö–æ–Ω—Ç–∞–∫—Ç—ã')],
    [KeyboardButton(text='–î–∞–≤–∞–π –∏–Ω–ª–∞–π–Ω')]
    ], 
    resize_keyboard=True,
    input_field_placeholder='–í—ã–±–µ—Ä–µ—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é', 
    one_time_keyboard=True)


def main_kb(user_telegram_id: int):
    kb_list = [
        [KeyboardButton(text="üìñ –û –Ω–∞—Å"), KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å")],
        [KeyboardButton(text="üìù –ó–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É"), KeyboardButton(text="üìö –ö–∞—Ç–∞–ª–æ–≥")]
    ]
    if user_telegram_id in admins:
        kb_list.append([KeyboardButton(text="‚öôÔ∏è –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å")])
    keyboard = ReplyKeyboardMarkup(keyboard=kb_list, resize_keyboard=True, one_time_keyboard=True)
    return keyboard

# settings = InlineKeyboardMarkup(inline_keyboard=[
#     [InlineKeyboardButton(text='–ù–∞—à —Å–∞–π—Ç', 
#                           url='https://novosibirsk.drom.ru/')]
#                           ])


def get_inline_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="–ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", callback_data='get_person')],
        [InlineKeyboardButton(text="–ù–∞ –≥–ª–∞–≤–Ω—É—é", callback_data='back_home')]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def ease_link_kb():
    inline_kb_list = [
        [InlineKeyboardButton(text="–•–∞–±—Ä", url='https://habr.com/ru/users/yakvenalex/')],
        [InlineKeyboardButton(text="–¢elegram", url='tg://resolve?domain=yakvenalexx')],
        [InlineKeyboardButton(text="–ú–æ–±–∏–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏", web_app=WebAppInfo(url="https://tg-promo-bot.ru/questions"))]
    ]
    return InlineKeyboardMarkup(inline_keyboard=inline_kb_list)


def get_random_person():
    fake = Faker('ru_RU')

    user = {
        'name': fake.name(),
        'address': fake.address(),
        'email': fake.email(),
        'phone_number': fake.phone_number(),
        'birth_date': fake.date_of_birth(),
        'company': fake.company(),
        'job': fake.job()
    }
    return user



def create_qst_inline_kb(questions: dict) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    for question_id, question_data in questions.items():
        builder.row(
            InlineKeyboardButton(
                text=question_data.get('qst'),
                callback_data=f'qst_{question_id}'
            )
        )
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞ –≥–ª–∞–≤–Ω—É—é"
    builder.row(
        InlineKeyboardButton(
            text='–ù–∞ –≥–ª–∞–≤–Ω—É—é',
            callback_data='back_home'
        )
    )
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
    builder.adjust(1)
    return builder.as_markup()


